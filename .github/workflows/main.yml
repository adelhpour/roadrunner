name: BuildRoadRunner

on:
  push:
    branches-ignore:
      - '*'

jobs:
  build_on_OSs:
    name:
      Build on ${{ matrix.platform.name }}-python${{ matrix.python_version.version }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: macos-latest-release
            os_name: macos-latest
            arch: x86_64
            build_type: Release
            llvm_link: "https://github.com/sys-bio/llvm-13.x/releases/download/llvmorg-13.0.0/llvm-13.x-macosx_11_7_x86_64.zip"
            libroadrunner_deps_link: "https://github.com/sys-bio/libroadrunner-deps/releases/download/v2.1/libroadrunner-deps-Darwin-Release.zip"
        python_version:
          - name: py311
            version: "3.11"
    runs-on: ${{ matrix.platform.os_name }}

    steps:
      - name: Checkout RoadRunner
        uses: actions/checkout@v3

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install swig
        if: matrix.platform.os_name == 'macos-latest'
        shell: bash
        run: |
          brew install pcre pcre2
          mkdir -p ${{runner.workspace}}/swig
          mkdir -p ${{runner.workspace}}/swig/install
          curl -L https://prdownloads.sourceforge.net/swig/swig-4.0.2.tar.gz > swig.tar.gz
          tar -xzf swig.tar.gz -C ${{runner.workspace}}/swig --strip-components=1
          cd ${{runner.workspace}}/swig
          ./configure --prefix=${{runner.workspace}}/swig/install
          make -j 12
          make install
          echo SWIG_DIR="-DSWIG_EXECUTABLE=${{runner.workspace}}/swig/install/bin/swig" >> "${GITHUB_ENV}"
          ls ${{runner.workspace}}/swig/install/bin

      - name: Download libRoadRunner dependencies
        run: |
          curl -L ${{ matrix.platform.libroadrunner_deps_link }} > libroadrunner-deps.zip
          unzip -q libroadrunner-deps.zip -d libroadrunner-deps
          rm libroadrunner-deps.zip
          echo LIBROADRUNNER_DEPENDENCIES_DIR="-DRR_DEPENDENCIES_INSTALL_PREFIX=${{runner.workspace}}/roadrunner/libroadrunner-deps/install-azure/Release" >> "${GITHUB_ENV}"

      - name: Download LLVM
        run: |
          curl -L ${{ matrix.platform.llvm_link }} > llvm.zip
          unzip -q llvm.zip -d llvm
          rm llvm.zip
          echo LLVM_DIR="-DLLVM_INSTALL_PREFIX=${{runner.workspace}}/roadrunner/llvm" >> "${GITHUB_ENV}"

      - name: Install ccache
        if: matrix.platform.os_name == 'macos-latest'
        shell: bash
        run: |
          brew install ccache

      - name: Prepare ccache timestamp on non-Windows platforms
        if: matrix.platform != 'windows-latest'
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: Set ccache cache directory on non-Windows
        if: matrix.platform != 'windows-latest'
        shell: bash
        run: |
          echo "CCACHE_DIR=${{runner.workspace}}/.ccache" >> "${GITHUB_ENV}"
          echo "COMPILER_LAUNCHER=ccache" >> "${GITHUB_ENV}"

      - name: Cache ccache files on non-Windows
        if: matrix.platform != 'windows-latest'
        uses: actions/cache@v3
        with:
          path: ${{runner.workspace}}/.ccache
          key:
            ${{ runner.os }}-${{ steps.ccache_cache_timestamp.outputs.timestamp
            }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
            ${{ runner.os }}-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version.version }}

      - name: Install Python dependencies
        run: pip${{ matrix.python_version.version }} install numpy

      - name: Create build directory
        run: mkdir -p ${{ runner.workspace }}/build-roadrunner

      - name: Configure CMake for RoadRunner
        shell: bash
        working-directory: ${{runner.workspace}}/build-roadrunner
        run: |
          cmake $GITHUB_WORKSPACE \
          -G "Ninja" \
          -DCMAKE_BUILD_TYPE=${{ matrix.platform.build_type }} \
          -DCMAKE_OSX_ARCHITECTURES=${{ matrix.platform.arch }} \
          -DCMAKE_C_COMPILER_LAUNCHER=${COMPILER_LAUNCHER} \
          -DCMAKE_CXX_COMPILER_LAUNCHER=${COMPILER_LAUNCHER} \
          ${LIBROADRUNNER_DEPENDENCIES_DIR} \
          ${LLVM_DIR} \
          ${SWIG_DIR} \
          -DBUILD_PYTHON=ON \
          -DBUILD_TESTS=ON \
          -DBUILD_RR_PLUGINS=ON \
          -DBUILD_RR_CAPI=ON \
          -DCMAKE_INSTALL_PREFIX="${{runner.workspace}}/install-roadrunner"

      - name: Build and Install RoadRunner
        working-directory: ${{runner.workspace}}/build-roadrunner
        shell: bash
        run: |
          cmake --build . --target install --config ${{ matrix.platform.build_type }}
