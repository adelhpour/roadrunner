name: Build

on:
  push:
    branches:
      - develop
      - release

  pull_request:
    branches:
      - '*'

env:
  SOURCE_DIR: ${{ github.workspace }}
  BUILD_DIR: ${{ github.workspace }}\build
  INSTALL_DIR: ${{ github.workspace }}\roadrunner-"$RUNNER_OS"
  LLVM_INSTALL_PREFIX: ${{ github.workspace }}\llvm
  DEPS_INSTALL_PREFIX: ${{ github.workspace }}\libroadrunner-deps
  SWIG_SOURCE_DIR: ${{ github.workspace }}\swig
  SWIG_INSTALL_PREFIX: ${{ github.workspace }}\swig\install
  SWIG_EXECUTABLE: ${{ github.workspace }}\swig\install\bin\swig



jobs:
  WindowsBuildRoadrunnerCpp:
    runs-on: windows-latest

    strategy:
      matrix:
        BuildType: ['Release', 'Debug']
        include:
          - BuildTests: 'On'
            BuildType: 'Release'
          - BuildTests: 'OFF'
            BuildType: 'Debug'

    env:
      LLVM_CACHE: 'false'
      LLVM_DOWNLOAD_LINK: 'https://github.com/sys-bio/llvm-13.x/releases/download/llvmorg-13.0.0/llvm-13.x-msvc2022-x64-rel.zip'
      MinicondaRoot: 'C:\Miniconda'
      PythonName: 'py39'
      PythonVersion: 3.9
      PythonRoot: 'C:\Miniconda\envs\py39'
      PythonLibDir: 'C:\Miniconda\envs\py39\Lib'
      PythonScriptsDir: 'C:\Miniconda\envs\py39\Scripts'
      PythonExecutable: 'C:\Miniconda\envs\py39\python.exe'
      PipExecutable: 'C:\Miniconda\envs\py39\Scripts\pip.exe'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make Directories
        shell: pwsh
        run: |
          mkdir ${{ env.LLVM_INSTALL_PREFIX }}
          mkdir ${{ env.DEPS_INSTALL_PREFIX }}

      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ env.PythonVersion }}

      - name: Add conda to PATH
        shell: pwsh
        run: |
          Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"

      - name: Install packages using conda
        shell: pwsh
        run: |
          Write-Host "Creating new conda environment"
          conda create --quiet --yes --name ${{ env.PythonName }} python=${{ env.PythonVersion }}
          Write-Host "pip upgrade:"
          ${{ env.PipExecutable }} install --upgrade pip
          Write-Host "pip help:"
          ${{ env.PipExecutable }} install --help
          Write-Host "${{ env.PipExecutable }} install requests"
          ${{ env.PipExecutable }} install requests
          Write-Host "${{ env.PipExecutable }} install numpy"
          ${{ env.PipExecutable }} install numpy

      - name: Get LLVM
        shell: pwsh
        run: |
          echo "${{ env.PythonExecutable }} .\.github\workflows\getLLVM.py ${{ env.LLVM_DOWNLOAD_LINK }} ${{ env.LLVM_INSTALL_PREFIX }}"
          ${{ env.PythonExecutable }} .\.github\workflows\getLLVM.py ${{ env.LLVM_DOWNLOAD_LINK }} ${{ env.LLVM_INSTALL_PREFIX }}
        if: env.LLVM_CACHE == 'false'

      - name: Download libroadrunner-deps install artifacts
        uses: actions/download-artifact@v3
        with:
          name: sys-bio/libroadrunner-deps-$(runner.os)-$(BuildType)
          path: ${{ env.DEPS_INSTALL_PREFIX }}